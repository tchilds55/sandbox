name: Auto Assign New Issues to Project

on:
  issues:
    types: [opened]

jobs:
  assign-to-project:
    runs-on: ubuntu-latest
    steps:
      - name: Add issue to Project and label it
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issue = context.payload.issue;
            const issueNodeId = issue.node_id;
            const issueNumber = issue.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            console.log(`Processing issue #${issueNumber}: ${issue.title}`);
            
            // Step 1: Add "AE Backlog" label
            try {
              await github.rest.issues.addLabels({
                owner: owner,
                repo: repo,
                issue_number: issueNumber,
                labels: ['AE Backlog']
              });
              console.log('✓ Added "AE Backlog" label');
            } catch (error) {
              console.error('Failed to add label:', error.message);
            }
            
            // Step 2: Find your user project
            const projectOwner = 'tchilds55';  // Your username
            const projectNumber = 3;           // Your project number
            
            // Get project ID using GraphQL (user project, not org)
            const projectQuery = `
              query($owner: String!, $number: Int!) {
                user(login: $owner) {
                  projectV2(number: $number) {
                    id
                    title
                  }
                }
              }
            `;
            
            let projectId;
            let projectTitle;
            
            try {
              const projectResult = await github.graphql(projectQuery, {
                owner: projectOwner,
                number: projectNumber
              });
              
              projectId = projectResult.user.projectV2.id;
              projectTitle = projectResult.user.projectV2.title;
              console.log(`Found project: ${projectTitle} (ID: ${projectId})`);
            } catch (error) {
              console.error('Failed to find project:', error.message);
              throw new Error(`Could not find project. Error: ${error.message}`);
            }
            
            // Step 3: Add issue to project
            const addToProjectMutation = `
              mutation($projectId: ID!, $contentId: ID!) {
                addProjectV2ItemById(input: {projectId: $projectId, contentId: $contentId}) {
                  item {
                    id
                  }
                }
              }
            `;
            
            try {
              await github.graphql(addToProjectMutation, {
                projectId: projectId,
                contentId: issueNodeId
              });
              console.log(`✓ Added issue #${issueNumber} to project "${projectTitle}"`);
            } catch (error) {
              console.error('Failed to add to project:', error.message);
              throw error;
            }
            
            console.log(`✅ Successfully processed issue #${issueNumber}`);
